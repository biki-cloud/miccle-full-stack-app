# このワークフローにより、masterブランチへのpushが行われるたびに、自動的にステージング環境へのデプロイが行われます。

name: Deploy to Staging  # ワークフローの名前を定義します。

on:  # このワークフローがトリガーされるイベントを定義します。
  push:  # pushイベントがトリガーとなります。
    branches:
      - master  # masterブランチへのpushでワークフローが開始されます。

jobs:  # ワークフロー内で実行されるジョブを定義します。
  deploy:  # ジョブの名前を定義します。
    runs-on:  # ジョブが実行されるランナーを定義します。
      - self-hosted  # 自己ホスト型のランナーを使用します。
      - staging  # ランナーのラベルが`staging`のものを使用します。
    env:  # ジョブで使用される環境変数を定義します。
      ENVIRONMENT: staging  # 環境名を定義します。
      DOMAIN: ${{ secrets.DOMAIN_STAGING }}  # ドメイン名をGitHubのシークレットから取得します。
      SECRET_KEY: ${{ secrets.SECRET_KEY }}  # シークレットキーをGitHubのシークレットから取得します。
      FIRST_SUPERUSER: ${{ secrets.FIRST_SUPERUSER }}  # 最初のスーパーユーザー名をGitHubのシークレットから取得します。
      FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}  # 最初のスーパーユーザーのパスワードをGitHubのシークレットから取得します。
      SMTP_HOST: ${{ secrets.SMTP_HOST }}  # SMTPホストをGitHubのシークレットから取得します。
      SMTP_USER: ${{ secrets.SMTP_USER }}  # SMTPユーザー名をGitHubのシークレットから取得します。
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}  # SMTPパスワードをGitHubのシークレットから取得します。
      EMAILS_FROM_EMAIL: ${{ secrets.EMAILS_FROM_EMAIL }}  # 送信元のメールアドレスをGitHubのシークレットから取得します。
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}  # PostgresのパスワードをGitHubのシークレットから取得します。
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}  # SentryのDSNをGitHubのシークレットから取得します。
      VITE_API_URL: http://${{ secrets.DOMAIN_STAGING }}:5600 # APIのURLを定義します。
      BACKEND_CORS_ORIGINS: http://${{ secrets.DOMAIN_STAGING }}:3000 # CORSのオリジンを定義します。
    steps:  # ジョブ内で実行されるステップを定義します。
      - name: Checkout  # ステップの名前を定義します。
        uses: actions/checkout@v4  # GitHubのリポジトリをチェックアウトします。
      - run: |
          echo "DOMAIN=${DOMAIN}"
          echo "FIRST_SUPERUSER=${FIRST_SUPERUSER}"
          echo "FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}"
          echo "SMTP_HOST=${SMTP_HOST}"
          echo "SMTP_USER=${SMTP_USER}"
          echo "SMTP_PASSWORD=${SMTP_PASSWORD}"
          echo "EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}"
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
          echo "SENTRY_DSN=${SENTRY_DSN}"
          echo "VITE_API_URL=${VITE_API_URL}"
          echo "BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}"
      - run: sudo docker-compose -f docker-compose.yml down  # Docker Composeを使用してアプリケーションを停止します。
      - run: sudo docker-compose -f docker-compose.yml build  # Docker Composeを使用してアプリケーションをビルドします。
      - run: sudo docker-compose -f docker-compose.yml up -d  # Docker Composeを使用してアプリケーションを起動します。
